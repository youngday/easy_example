[package]
name = "easy_example"
version = "0.4.6"
authors = ["youngday"]
edition = "2024"

[features]
default = ["log", "platform-verifier", "ring", "runtime-tokio", "rustls"]
# Records how long locks are held, and warns if they are held >= 1ms
lock_tracking = []
# Provides `ClientConfig::with_platform_verifier()` convenience method
platform-verifier = ["proto/platform-verifier"]
rustls = ["dep:rustls", "proto/rustls", "proto/ring"]
# Enables `Endpoint::client` and `Endpoint::server` conveniences
ring = ["proto/ring"]
runtime-tokio = ["tokio/time", "tokio/rt", "tokio/net"]
runtime-async-std = ["async-io", "async-std"]
runtime-smol = ["async-io", "smol"]

# Write logs via the `log` crate when no `tracing` subscriber exists
log = ["tracing/log", "proto/log", "udp/log"]

[dependencies]
log = "0.4"
log4rs = { version = "1.3", features = ["toml", "json_encoder"] }
env_logger = "0.11"
pretty_env_logger ="0.5"
config = "0.15"
once_cell = { version = "1.21" }
bytes = "1.10"
assert2 = "0.3"
trybuild = "1.0"
criterion = "0.7"
anyhow = "1.0"


serde = { version = "1.0", features = ["derive"] }
serde_derive = "1.0"
serde_yaml = "0.9"
tokio = { version = "1.47", features = ["full", "macros","tracing"] }
tokio-rustls = "0.26"
rustls-pemfile = "2.2"
tokio-stream = { version =  "0.1", features = ["net"] }
tokio-util = { version = "0.7", features = ["full"] }
tokio-serial = "5.4.5"
reqwest = { version = "0.12", features = ["json"] }
futures = { version = "0.3", default-features = false, features = ["alloc"] }
futures-util = { version = "0.3", default-features = false, features = ["sink", "std"] }

tmq = { version = "0.5" }

rumqttc = "0.24"
rumqttd="0.19"
base64 = "0.22"

ndarray = "0.16"
rand = "0.9"
rand_distr = "0.5"
itertools = "0.14"
csv = "1.3"
image = "0.25" 

iceoryx2 ="0.6"
iceoryx2-bb-container = "0.6"


# network
hyper = { version = "1.6", features = ["http1", "server", "client"] }
hyper-util = { version = "0.1", features = ["tokio"] }
http-body-util = { version = "0.1" }
axum = { version="0.8", features = ["ws"] }
axum-extra = { version="0.10", features = ["typed-header"] }

poem="3.1"
webpki-roots = "1.0"



headers = "0.4"

tower = { version = "0.5", features = ["util"] }
tower-http = { version = "0.6", features = ["fs", "trace"] }
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter"] }

fastwebsockets = { version = "0.10", features = ["upgrade"] }

# quiche++++++++++++++++++++++++++++++++++++++++++++
async-io = { version = "2.5", optional = true }
async-std = { version = "1.13.1", optional = true }
# Enables futures::io::{AsyncRead, AsyncWrite} support for streams
futures-io = { version = "0.3", optional = true }
rustc-hash = "2.1"
pin-project-lite = "0.2"
quinn="0.11"
proto = { package = "quinn-proto",version = "0.11", default-features = false }
protoc-rust = "2.28"
rustls = { version = "0.23", default-features = false, features = ["ring", "std"], optional = true }
smol = { version = "2.0", optional = true }
thiserror = "2.0"
udp = { package = "quinn-udp",  version = "0.5", default-features = false }
#quiche----------------------------------------------

tokio-tungstenite = "0.27"
tungstenite = "0.27"



[dev-dependencies]
# quiche++++++++++++++++++++++++++++++++++++++++++++
crc = "3.3"
bencher = "0.1"
directories-next = "2.0"
rand = "0.9"
rcgen = "0.14"
rustls-pemfile = "2.2"
clap = { version = "4.5", features = ["derive"] }
# tokio = { version = "1.38", features = ["rt", "rt-multi-thread", "time", "macros", "sync"] }
tracing-subscriber = { version = "0.3", default-features = false, features = ["env-filter", "fmt", "ansi", "time", "local-time"] }
tracing-futures = { version = "0.2", default-features = false, features = ["std-future"] }
url = "2.5"
#quiche----------------------------------------------

[build-dependencies]
poem-grpc-build="0.5"

# iceoryx2 publish_subscribe
[[example]]
name = "ice_pub"
path = "examples/dds_iceoryx2/publisher.rs"
[[example]]
name = "ice_sub"
path = "examples/dds_iceoryx2/subscriber.rs"
[[example]]
name = "discovery"
path = "examples/discovery/discovery.rs"

[[example]]
name = "zmq_pub"
path = "examples/zeromq_tmq/publish.rs"
[[example]]
name = "zmq_sub"
path = "examples/zeromq_tmq/subscriber.rs"
[[example]]
name = "zeromq_tmq"
path = "examples/zeromq_tmq/zeromq_tmq.rs"
# websocket
[[example]]
name = "ws-server"
path = "examples/websocket/src/main.rs"
[[example]]
name = "ws-client"
path = "examples/websocket/src/client.rs"
# websocket transport
[[example]]
name = "wt-server"
path = "examples/webtransport/src/main.rs"
[[example]]
name = "wt-client"
path = "examples/webtransport/src/client.rs"

[[example]]
name = "quic_client"
path = "examples/quic/client.rs"

[[example]]
name = "quic_server"
path = "examples/quic/server.rs"

[[example]]
name = "mqtt_asyncpubsub"
path = "examples/mqtt/mqtt_asyncpubsub.rs"

[[example]]
name = "rumqttd"
path = "examples/mqtt/rumqttd.rs"
